#include "../src/ArabicToRoman.h"

#test given1ReturnsI
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 1);

  ck_assert_str_eq(romanNumeral.ones, "I");
  ck_assert_str_eq(romanNumeral.tens, "");
  ck_assert_str_eq(romanNumeral.hundreds, "");
  ck_assert_str_eq(romanNumeral.thousands, "");
  ck_assert(isValidRomanNumeral == true);

#test given1212ReturnsMCCXII
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 1212);

  ck_assert_str_eq(romanNumeral.ones, "II");
  ck_assert_str_eq(romanNumeral.tens, "X");
  ck_assert_str_eq(romanNumeral.hundreds, "CC");
  ck_assert_str_eq(romanNumeral.thousands, "M");
  ck_assert(isValidRomanNumeral == true);

#test given2323ReturnsMMCCCXXIII
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 2323);

  ck_assert_str_eq(romanNumeral.ones, "III");
  ck_assert_str_eq(romanNumeral.tens, "XX");
  ck_assert_str_eq(romanNumeral.hundreds, "CCC");
  ck_assert_str_eq(romanNumeral.thousands, "MM");
  ck_assert(isValidRomanNumeral == true);

#test given3444ReturnsMMMCDXLIV
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 3444);

  ck_assert_str_eq(romanNumeral.ones, "IV");
  ck_assert_str_eq(romanNumeral.tens, "XL");
  ck_assert_str_eq(romanNumeral.hundreds, "CD");
  ck_assert_str_eq(romanNumeral.thousands, "MMM");
  ck_assert(isValidRomanNumeral == true);

#test given4000ReturnsAsInvalid
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 4000);

  ck_assert(isValidRomanNumeral == false);

#test given0ReturnsAsInvalid
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 0);

  ck_assert(isValidRomanNumeral == false);

#test given555ReturnsDLV
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 555);

  ck_assert_str_eq(romanNumeral.ones, "V");
  ck_assert_str_eq(romanNumeral.tens, "L");
  ck_assert_str_eq(romanNumeral.hundreds, "D");
  ck_assert_str_eq(romanNumeral.thousands, "");
  ck_assert(isValidRomanNumeral == true);

#test given1666ReturnsMDCLXVI
  struct RomanNumeral romanNumeral;

  bool isValidRomanNumeral = ArabicToRoman(&romanNumeral, 1666);

  ck_assert_str_eq(romanNumeral.ones, "VI");
  ck_assert_str_eq(romanNumeral.tens, "LX");
  ck_assert_str_eq(romanNumeral.hundreds, "DC");
  ck_assert_str_eq(romanNumeral.thousands, "M");
  ck_assert(isValidRomanNumeral == true);
